import numpy as np

def kendall_tau(x, y):
    x = np.asarray(x)
    y = np.asarray(y)
    assert len(x) == len(y)
    n = len(x)
    kendall = 0
    for i in range(n):
        for j in range(i + 1, n):
            kendall += np.sign(x[i] - x[j]) * np.sign(y[i] - y[j])
    kendall /= n * (n - 1) / 2
    return kendall

# cifar10dvs
# acc1 = [0.24, 0.175, 0.16, 0.151, 0.101, 0.158, 0.095, 0.102]
# logme = [-0.215017652, -0.215278788, -0.216032173, -0.216070732, -0.216172142, -0.215443893, -0.215436089, -0.216024226]
# dvs128gesture
# acc1 = [0.21875, 0.21875, 0.166666667, 0.166666667, 0.166666667, 0.173611111, 0.166666667, 0.166666667]
# acc5 = [0.84375, 0.729166667, 0.652777778, 0.628472222, 0.572916667, 0.788194444, 0.5, 0.489583333]
# logme = [-0.160421598, -0.164500449, -0.172659438, -0.172518838, -0.173527212, -0.163917169, -0.164032402, -0.169217274]
# ame = [-0.170838636, -0.17078844, -0.171360575, -0.171653606, -0.173403129, -0.170570334, -0.170613341, -0.171466637]



if __name__ == '__main__':
    x = [-0.170838636, -0.17078844, -0.171360575, -0.171653606, -0.173403129, -0.170570334, -0.170613341, -0.171466637] 
    y =  [0.21875, 0.21875, 0.166666667, 0.166666667, 0.166666667, 0.173611111, 0.166666667, 0.166666667]
    kendall = kendall_tau(x, y)
    print(kendall)